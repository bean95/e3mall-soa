<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
	
	<!-- 经研究发现spring扫描注册PropertyPlaceholderConfigurer的bean被设置为单例模式，spring只会扫描一个PropertyPlaceholderConfigurer
	             或者<context:property-placeholder>配置，其它多余将被忽略，所以才会出现替代属性值的占位符无法解析。 -->
         <!--  
         	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			    <property name="locations">
			        <list>
			            <value>classpath:jdbc.properties</value>
			            <value>classpath:cache/redis.properties</value>
			        </list>
			    </property>
			</bean>
         -->
	<context:property-placeholder location="classpath:conf/resource.properties" ignore-unresolvable="true"/>
	
    <!-- 扫描service层注解 -->
    <context:component-scan base-package="com.e3mall.service"/>
    
    <!-- 使用dubbo发布服务 -->
	<!-- 提供方应用信息，用于计算依赖关系  发布服务的名称 -->
	<dubbo:application name="e3-manager" />
	<dubbo:registry protocol="zookeeper" address="127.0.0.1:2181" />
	<!-- 用dubbo协议在20880端口暴露服务 -->
	<!-- 暴露服务的端口：使用dubbo发布服务，运行在20880端口，所以其他工程必须运行在其他端口，否则冲突  -->
	<!-- tomcat作用就是初始化一个spring容器 ， 其他都是运行在dubbo上 -->
	<dubbo:protocol name="dubbo" port="20880" />
	<!-- 声明需要暴露的服务接口 -->
	<dubbo:service interface="com.e3mall.service.TbItemService" ref="tbItemServiceImpl" />
	<dubbo:service interface="com.e3mall.service.ItemCatService" ref="itemCatServiceImpl" />

</beans>